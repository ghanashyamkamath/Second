

/* variables which can creat your own attributes and apply it  */




*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


/* importing font without using link tag  */
@font-face{
    font-family: 'Ruhl';
    src: url('./fonts/FrankRuhlLibre-Regular.ttf');
}
@font-face{
    font-family: 'Ruhl Medium';
    src: url('./fonts/FrankRuhlLibre-Medium.ttf');
}
@font-face{
    font-family: 'Vibes';
    src: url('./fonts/GreatVibes-Regular.ttf');
}




html{
    font-size: 62.5%;
    /* --header1:4rem; we created a variable and we can apply it anywhere
    here applied at h1 and anything we can do */
    --header1:calc(2rem + 1vw);/*2rem as base and every 1000px it will grow
    and additional 1vw or 10px*/
    --header2:calc(3.5rem + 1vw);
    --header3:calc(3rem + 1vw);
    --header4:calc(2.4rem + 1vw);
    --text:calc(1.5rem + 1vw);
    --big:calc(6rem + 1vw);
    --special-color:#906272;
    --background-color:#414141;
    --gray-text:#525252;
    /* the variables might not be supported by all browsers 
    works in firefox
    we can check working in caniuse.com */
    scroll-behavior: smooth;
}





li,
button,
label,
input,
a,
p{
    font-size:var(--text);
}
h2{
    font-size: var(--header2);
}
h3{
    font-size: var(--header3);
    font-weight: 400;
}
h4,
h5{
    font-size: var(--header4);
}


ul{
    list-style: none;
}
a{
    
    text-decoration: none;
    color: black;
    
}
.flex{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

body{
    
    font-family: "Ruhl",sans-serif;
    animation: opening 1s ease-in-out;


}
h1{
    font-size: var(--header1);
    font-family: "Vibes",sans-serif;
    
}



/* nav section  */
.main-head{
    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);
    z-index: 2;
    /* to remove a boxshadow issue give position: relative; */
    position: relative;

}



nav{
    width: 90%;
    margin: auto;
    
    display: flex;
    align-items: center;
    min-height: 10vh;
    padding: 2rem 0rem;

}
#logo{
    
    flex:1 1 20rem;
}
.nav-links{
    display: flex;
    justify-content: space-around;
    flex: 1 1 20rem;
}
.hero{
    min-height: 90vh;
    /* width: 90%;
    margin: auto; */
    width: 95%;
    margin: 0 0 0 auto ;  
    /* here it stretches only to the right */
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;


}

.hero-introduction{
    flex:2 1 40rem;
    text-align: center;
    
}
.hero-introduction p{
    padding: 5rem 10rem;
    color: var(--gray-text);
}
.hero-introduction h2{
    padding-top: 3rem;
    
}
.hero-introduction a{
    padding: 2rem 8rem;
    border: 3px solid black;
    margin-bottom: 4rem; 
}

.hero-images{
    flex:1 1 40rem;
    background: linear-gradient(#dad8dd,#dad1d4);
    position: relative;
    z-index: 1;/*all images are in the front*/

}
.hero-elena{
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.plant{
    position: absolute;
    bottom: 0;
    left: -20%;
    z-index: -1;/*it is at the  back position*/


    transform: translateY(10%) rotateZ(-10deg) rotateX(-90deg) forwards;


    animation: 
                plant-entrance 1.5s ease-in-out 0.5s, 
                plant-shake 2.5s infinite ease  alternate-reverse 2s;
    transform-origin: bottom;
    max-height: 80%;
    
}
.plant2{
    left: 40%;
}

/*Animations*/

@keyframes opening{
    from{
        opacity: 0;
    }
    to{
        opacity: 1;
    }
}

@keyframes plant-entrance{
    from{
        transform: translateY(10%) rotateZ(-10deg) rotateX(-90deg);/*plant goes down 10%*/
    }
    to{
        transform: translateY(0%) rotateZ(0deg) rotateX(0deg);

    }
}

@keyframes plant-shake{
    from{
        transform: rotateZ(-5deg);
    }
    to{
        transform: rotateZ(0deg);
    }
}



.burger,.menu-check{
    display: none;
}

/*About Section*/
.about{
    min-height: 100vh;
    display: flex;
    flex-wrap: wrap;
}
.about-text{
    background: var(--background-color);
    flex: 2 1 40rem;
    justify-content: space-around;
    color: white;
}

.about-text div{
    padding: 3rem 8rem;
}
.about-image{
    flex: 1 1 40rem;
    position: relative;
    
    

}
.about-image h5{
    position: absolute;
    top:20%;
    left: 50%;
    transform: translate(-50%,-20%);/* first value left and right
    second value is top and bottom*/
    letter-spacing: 2rem;
}
.about-image img{
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.about-text h3{
    padding: 2rem 0rem;
    font-family: 'Ruhl Medium';
}
.about-text h2{
    font-family: 'Vibes';
    padding: 4rem;
}







/*this is one method of animating the navs
another method is using javascript whis is commonly used and simpl*/


/*Gallery*/

.gallery{
    display: grid;
    min-height: 100vh;
    grid-template-columns: repeat(3,1fr);
    position: relative;
}
.gallery img{
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.gallery1{
    grid-column: 1/3;
    
}

.gallery2{
    grid-column: 3/4;
    grid-row: 1/3;
}

.gallery3{
    grid-column: 2/3;
}
.gallery4{
    grid-column: 1/2;
    grid-row: 2/3;
}

.gallery-head{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    /*eg; if a text is given then transform  first value -50%
    moves the text to left 50% and that 50% is the 50% of text size
    similarly -50% takes it to  bottom */
    color: white;
    background-color: var(--background-color) ;
    padding:5rem 10rem;
    text-align: center;
    opacity: 0.8;


}

/*Contact Section*/

.contact{
    min-height: 90vh;
    display: flex;
    flex-wrap: wrap;
}
.form-wrapper{
    flex:3 1 40rem ;
    
}
.form-wrapper h2{
    margin: 5rem 0rem;
}

.form-wrapper span{
    font-size: var(--big);
    color: var(--special-color);
}
.form-wrapper label{
    display: block;
}
.form-wrapper input{
    display: block;
    margin: 3rem 0rem;
    background: var(--background-color);
    color: white;
    border: none;
    padding: 1rem;
}
.form-wrapper button{
    padding: 1rem 8rem;
    background: var(--special-color);
    color: white;
    border: none;
    width: 100%;
}
.contact img{
    flex: 1 1 40rem;
}
/*Footer Section*/

footer{
    background: var(--background-color);
    display: flex;
    color: white;
    padding: 3rem 5%;
    align-items: center;
    flex-wrap: wrap;

}
footer h4{
    flex: 3 1 40rem;
    font-size: calc(1.4rem + 1vw);
}
footer ul{
    display: flex;
    flex: 1 1 40rem;
    justify-content: space-between;
    align-items: center;
}


@media screen and (max-width:842px)
{   
    .hero{
        width: 100%;
    }
    .hero-introduction p{
        padding: 5rem 3rem;
    }
    /*Burger Thing*/
    .burger{
        position: relative;
        display: block;
        cursor: pointer;
    }
    .burger span{
        padding: 0.2rem 2rem;/*giving height*/
        background: var(--gray-text);
        margin: 0.5rem 0rem;/*seperating each span with 0.5rem*/
        display: block;
        transition: all 0.5s ease;

        /* span is used for lines in burger.3 spans therefore threeline */
    }
    .nav-links a{
        color: white;
        font-size: var(--header3);
        text-decoration: underline;

    }


    .nav-links{
        background: var(--background-color);
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 100%;
        flex-direction: column;
        align-items: center;
        transition: transform 1s ease;

        /*we are animating the nav links*/

    }
    /* .menu-check{
        display: block;
        position: absolute;
        top:50%;
        right:5%;
        transform: translate(5%,-50%);
        width: 5rem;
        height: 5rem;
        cursor: pointer;
        opacity: 0;


        checkbox is used as the size of 3 span lines and 
        made the opacity 0,so when clicking the lines the checkbox wil be checked

        z-index: 100;

    } */

    /*this means when input is checked what happens to nav-links */


    /* .menu-check:checked + .nav-links{
        transform: translateX(-100%);

    }

    .menu-check:checked ~ .burger span{
        
        background: white;
         ~ is used for targetting

    }
    .menu-check:checked ~ .burger span:nth-child(1){
        transform: rotateZ(45deg) translateY(300%);

    }
    .menu-check:checked ~ .burger span:nth-child(2){
        opacity: 0;

    }
    .menu-check:checked ~ .burger span:nth-child(3){
        transform: rotateZ(-45deg) translateY(-300%);

    } */

    /*  Good Method of Burger Animation Using JavaScript*/
    .nav-open{
        transform: translateX(-100%);

    }
    .toggle .line1{
        transform: rotateZ(45deg) translateY(300%);
        background: white;
    }

    .toggle .line2{
        
        opacity: 0;
    }

    .toggle .line3{
        transform: rotateZ(-45deg) translateY(-300%);
        background: white;
    }



    




    
    /*about-section*/
    .about-text div{
        padding: 3rem 3rem;
    }
    /*Gallery*/
    .gallery img{
        /*this makes css grid responsive*/
        grid-row: auto;
        grid-column: auto;
    }
    .gallery{
                /*this makes css grid responsive*/

        grid-template-columns: repeat(auto-fit,minmax(20rem,1fr));
        /*automatically creates a specific number of column to fit the grid*/
        /*minimum should be atleast 20rem and maximun 1fr*/
        /*when reaching 20 rem it jumps down --Responsive*/
    }
    .gallery-head{
        display: none;
    }
    .contact img{
        display: none;
    }
    footer ul{
        order: 1;
    }
    footer h4{
        order: 2;
        text-align: center;
        padding: 1rem;
    }
}


@media screen and (min-width:1700px)
{
    html{
        --header1:3rem;
        --header2:4.5rem;
        --header3:3.5rem;
        --header4:2.5rem;
        --big:6rem;
        --text:3rem;
    }
}